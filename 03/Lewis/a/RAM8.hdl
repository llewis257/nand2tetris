// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:   


DMux8Way(in=true ,sel=address ,a=load1 ,b=load2 ,c=load3 ,d=load4 ,e=load5 ,f=load6 ,g=load7 ,h=load8 );

And(a=load1,b=load,out=loadr1 );
And(a=load2,b=load,out=loadr2);
And(a=load3,b=load,out=loadr3);
And(a=load4,b=load,out=loadr4);
And(a=load5,b=load,out=loadr5);
And(a=load6,b=load,out=loadr6);
And(a=load7,b=load,out=loadr7);
And(a=load8,b=load,out=loadr8);

Register(in=in, load=loadr1, out=r1);
Register(in=in, load=loadr2, out=r2);
Register(in=in, load=loadr3, out=r3);
Register(in=in, load=loadr4, out=r4);
Register(in=in, load=loadr5, out=r5);
Register(in=in, load=loadr6, out=r6);
Register(in=in, load=loadr7, out=r7);
Register(in=in, load=loadr8, out=r8);

Mux8Way16(a=r1 ,b=r2 ,c=r3 ,d=r4 ,e=r5 ,f=r6 ,g=r7 ,h=r8, sel=address, out=out);

}







